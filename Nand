LIBRARY ieee;  
 USE ieee.std_logic_1164.ALL;  
 ENTITY nand_test IS  
 END nand_test;  
 ARCHITECTURE behavior OF nand_test IS   
   -- Component Declaration for the Unit Under Test (UUT)  
   COMPONENT nandgate  
   PORT(  
      a : IN std_logic;  
      b : IN std_logic;  
      f : OUT std_logic  
     );  
   END COMPONENT;  
   --Inputs  
   signal a : std_logic := '0';  
   signal b : std_logic := '0';  
       --Outputs  
   signal f : std_logic;  
 BEGIN  
      -- Instantiate the Unit Under Test (UUT)  
   uut: nandgate PORT MAP (  
      a => a,  
      b => b,  
      f => f  
     );  
   -- Stimulus process  
   stim_proc: process  
   begin            
    -- hold reset state for 100 ns.  
    wait for 100 ns;       
           -- hold reset state for 100 ns.  
    wait for 100 ns;       
            a <= '0'; -- check 0 and 0 = 1  
            b <= '0';   
            wait for 100 ns;   
            a <= '1'; -- check 0 and 1 = 1  
            b <= '0';   
            wait for 100 ns;   
            a <= '0'; -- check 1 and 0 = 1  
            b <= '1';   
            wait for 100 ns;   
            a <= '1'; -- check 1 and 1 = 0  
            b <= '1';   
    wait;  
   end process;  
 END;  




library IEEE;  
 use IEEE.STD_LOGIC_1164.ALL;  
 entity nandgate is  
   Port ( a : in STD_LOGIC;  
       b : in STD_LOGIC;  
       f : out STD_LOGIC);  
 end nandgate;  
 architecture Behavioral of nandgate is  
 begin  
 f<= a nand b;  
 end Behavioral;
