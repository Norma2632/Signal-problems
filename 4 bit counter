library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity TB_counter is
--  Port ( );
end TB_counter;

architecture Behavioral of TB_counter is
component up_counter is
    Port ( clk : in STD_LOGIC;
           reset : in STD_LOGIC;
           counter : out STD_LOGIC_VECTOR (3 downto 0));
end component;
signal reset,clk:STD_LOGIC:='0';
signal counter:STD_LOGIC_VECTOR (3 downto 0);
begin
UUT:up_counter port map(clk=>clk,reset=>reset,counter=>counter);
clock_process:process
begin
clk<='0';
wait for 10 ns;
clk<='1';
wait for 10 ns;
end process;

stim_proc:process
begin
reset<='1';
wait for 20 ns;
reset<='0';
wait;
end process;


end Behavioral;






library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity up_counter is
    Port ( clk : in STD_LOGIC;
           reset : in STD_LOGIC;
           counter : out STD_LOGIC_VECTOR (3 downto 0));
end up_counter;

architecture Behavioral of up_counter is
signal counter_up:STD_LOGIC_VECTOR (3 downto 0);

begin
process(clk)
begin
if(rising_edge(clk))then
if(reset='1')then
counter_up<=x"0";
else
counter_up<=counter_up+x"1";
end if;
end if;
end process;
counter<=counter_up;


end Behavioral;
